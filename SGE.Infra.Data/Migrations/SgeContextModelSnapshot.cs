// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGE.Infra.Data.Context;

namespace SGE.Infra.Data.Migrations
{
    [DbContext(typeof(SgeContext))]
    partial class SgeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGE.Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("IdAluno");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("EnderecoIdEndereco");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("IdAluno");

                    b.HasIndex("EnderecoIdEndereco");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Disciplina", b =>
                {
                    b.Property<int>("IdDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Ementa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdDisciplina");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Numero")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .HasMaxLength(2);

                    b.HasKey("IdEndereco");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Escola", b =>
                {
                    b.Property<int>("IdEscola")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(19)")
                        .HasMaxLength(19);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("EnderecoIdEndereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("IdEscola");

                    b.HasIndex("EnderecoIdEndereco");

                    b.ToTable("Escolas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Professor", b =>
                {
                    b.Property<int>("IdProfessor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("IdProfessor");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("SGE.Domain.Entities.ProfessorDisciplina", b =>
                {
                    b.Property<int>("IdDisciplina");

                    b.Property<int>("IdProfessor");

                    b.HasKey("IdDisciplina", "IdProfessor");

                    b.HasIndex("IdProfessor");

                    b.ToTable("ProfessorDisciplinas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Trabalha", b =>
                {
                    b.Property<int>("IdEscola");

                    b.Property<int>("IdProfessor");

                    b.Property<DateTime?>("Adimissao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("IdEscola", "IdProfessor");

                    b.HasIndex("IdProfessor");

                    b.ToTable("Trabalhas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Turma", b =>
                {
                    b.Property<int>("IdTurma")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Turno")
                        .IsRequired();

                    b.HasKey("IdTurma");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.TurmaDisciplina", b =>
                {
                    b.Property<int>("IdTurma");

                    b.Property<int>("IdDisciplina");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime");

                    b.HasKey("IdTurma", "IdDisciplina");

                    b.HasIndex("IdDisciplina");

                    b.ToTable("TurmaDisciplinas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.TurmaEscola", b =>
                {
                    b.Property<int>("IdEscola");

                    b.Property<int>("IdTurma");

                    b.HasKey("IdEscola", "IdTurma");

                    b.HasIndex("IdTurma");

                    b.ToTable("EscolaTurmas");
                });

            modelBuilder.Entity("SGE.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("SGE.Domain.Entities.Endereco", "Endereco")
                        .WithMany("ListaDeAlunos")
                        .HasForeignKey("EnderecoIdEndereco");

                    b.HasOne("SGE.Domain.Entities.Escola", "Escola")
                        .WithMany("ListaDeAlunos")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.Domain.Entities.Turma", "Turma")
                        .WithMany("ListaDeAlunos")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.Domain.Entities.Escola", b =>
                {
                    b.HasOne("SGE.Domain.Entities.Endereco", "Endereco")
                        .WithMany("ListaDeEscolas")
                        .HasForeignKey("EnderecoIdEndereco");
                });

            modelBuilder.Entity("SGE.Domain.Entities.ProfessorDisciplina", b =>
                {
                    b.HasOne("SGE.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany("ListaDeProfessores")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.Domain.Entities.Professor", "Professor")
                        .WithMany("ListaDeDisciplinas")
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.Domain.Entities.Trabalha", b =>
                {
                    b.HasOne("SGE.Domain.Entities.Escola", "Escola")
                        .WithMany("ListaDeTrabalhos")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.Domain.Entities.Professor", "Professor")
                        .WithMany("ListaDeTrabalho")
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.Domain.Entities.TurmaDisciplina", b =>
                {
                    b.HasOne("SGE.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany("ListaDeTurmas")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.Domain.Entities.Turma", "Turma")
                        .WithMany("ListaDeDisciplinas")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.Domain.Entities.TurmaEscola", b =>
                {
                    b.HasOne("SGE.Domain.Entities.Escola", "Escola")
                        .WithMany("ListaDeTurmas")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.Domain.Entities.Turma", "Turma")
                        .WithMany("ListaDeEscolas")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
